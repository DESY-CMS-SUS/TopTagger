#include "TopTagger/TopTagger/include/TTMOpenCVMVA.h"

void TTMOpenCVMVA::getParameters(const cfg::CfgDocument* cfgDoc)
{
    //Construct contexts
    cfg::Context commonCxt("Common");
    cfg::Context localCxt("TTMOpenCVMVA");

    discriminator_ = cfgDoc->get("discCut", localCxt, -999.9);
    modelFile_ = cfgDoc->get("modelFile", localCxt, "");

    treePtr_ = RTrees::load<RTrees>(modelFile_);
}

void TTMOpenCVMVA::run(TopTaggerResults& ttr)
{
    //Get the list of top candidates as generated by the clustering algo
    std::vector<TopObject>& topCandidates = ttResults.getTopCandidates();
    //Get the list of final tops into which we will stick candidates
    std::vector<TopObject*>& tops = ttResults.getTops();

    for(auto& topCand : topCandidates)
    {
        //Construct data matrix for prediction

        //predict value

        //place in final top list if it passes the threshold
    }
}
